"""
Database dependencies
–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""

from typing import AsyncGenerator, Optional
from fastapi import Depends
from sqlalchemy.ext.asyncio import AsyncSession
from loguru import logger

from app.core.database import get_db, AsyncSessionLocal
from app.db.session import DatabaseManager


async def get_database_session() -> AsyncGenerator[AsyncSession, None]:
    """
    Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    Yields:
        AsyncSession: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy
    """
    async with AsyncSessionLocal() as session:
        try:
            logger.debug("üìä –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è –ë–î")
            yield session
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏ –ë–î: {e}")
            await session.rollback()
            raise
        finally:
            await session.close()
            logger.debug("üìä –°–µ—Å—Å–∏—è –ë–î –∑–∞–∫—Ä—ã—Ç–∞")


async def get_db_manager(
        session: AsyncSession = Depends(get_database_session)
) -> DatabaseManager:
    """
    Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    Args:
        session: –°–µ—Å—Å–∏—è –ë–î

    Returns:
        DatabaseManager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î
    """
    return DatabaseManager(session)


class DatabaseDependency:
    """–ö–ª–∞—Å—Å –¥–ª—è dependency injection –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î"""

    def __init__(self, session: AsyncSession = Depends(get_database_session)):
        self.session = session
        self.manager = DatabaseManager(session)

    async def commit(self) -> None:
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î"""
        try:
            await self.session.commit()
            logger.debug("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î: {e}")
            await self.session.rollback()
            raise

    async def rollback(self) -> None:
        """–û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î"""
        await self.session.rollback()
        logger.debug("‚Ü©Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã")

    async def refresh(self, instance) -> None:
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –ë–î"""
        await self.session.refresh(instance)
        logger.debug(f"üîÑ –û–±—ä–µ–∫—Ç {type(instance).__name__} –æ–±–Ω–æ–≤–ª–µ–Ω")


# –ì–æ—Ç–æ–≤—ã–µ dependencies –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞—Ö
GetDB = Depends(get_database_session)
GetDBManager = Depends(get_db_manager)